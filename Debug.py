def MinimumZachalnne(BADANA_LISTA_ODLEGŁOSCI,LISTA_DOSTEPNOSC):
    MINIMUM_LOKALNE = max(BADANA_LISTA_ODLEGŁOSCI)
    NAJBLIŻSZE_MIASTO = BADANA_LISTA_ODLEGŁOSCI.index(MINIMUM_LOKALNE)
    for i in range(len(BADANA_LISTA_ODLEGŁOSCI)):
        ODLEGŁOŚĆ = BADANA_LISTA_ODLEGŁOSCI[i]
        if ODLEGŁOŚĆ<MINIMUM_LOKALNE and ODLEGŁOŚĆ!=0:
            PRETENDET = BADANA_LISTA_ODLEGŁOSCI.index(ODLEGŁOŚĆ)
            if PRETENDET in LISTA_DOSTEPNOSC:
                MINIMUM_LOKALNE = ODLEGŁOŚĆ
                NAJBLIŻSZE_MIASTO = PRETENDET
    return (MINIMUM_LOKALNE,NAJBLIŻSZE_MIASTO)

def DrogaWspinaczkowy(BADANA_LISTA_ODLEGLOSCI,KOLEJNOSC):
    Suma = 0.0
    for i in range(len(KOLEJNOSC) - 1):
        Suma = Suma + BADANA_LISTA_ODLEGLOSCI[KOLEJNOSC[i]][KOLEJNOSC[i + 1]]
    return(Suma)

def ZmianaMiejscWspiczkowy(LISTA_KOLEJNOSCI, PIERWSZY_ELEMENT,DRUGI_ELEMENT):
    LISTA_KOLEJNOSCI[DRUGI_ELEMENT], LISTA_KOLEJNOSCI[PIERWSZY_ELEMENT] = LISTA_KOLEJNOSCI[PIERWSZY_ELEMENT], LISTA_KOLEJNOSCI[DRUGI_ELEMENT]

LISTA_ODLEGLOSCI_MIEDZY_MIASTAMI = [[0.0, 142.0, 220.2, 183.8, 161.3, 94.1], [142.0, 0.0, 134.7, 165.1, 243.3, 86.4], [220.2, 134.7, 0.0, 88.4, 225.0, 126.1], [183.8, 165.1, 88.4, 0.0, 139.8, 104.0], [161.3, 243.3, 225.0, 139.8, 0.0, 156.9], [94.1, 86.4, 126.1, 104.0, 156.9, 0.0]]

OPTYMALNA_KOLEJNOSC = []
import random
for a in range(len(LISTA_ODLEGLOSCI_MIEDZY_MIASTAMI)):
    OPTYMALNA_KOLEJNOSC.append(a)
#OPTYMALNA_KOLEJNOSC.reverse()
random.shuffle(OPTYMALNA_KOLEJNOSC)

OPTYMALNA_DROGA = DrogaWspinaczkowy(LISTA_ODLEGLOSCI_MIEDZY_MIASTAMI,OPTYMALNA_KOLEJNOSC)
print(OPTYMALNA_KOLEJNOSC)
print(OPTYMALNA_DROGA)

DLUGOSC_KOLEJNOSCI = len(OPTYMALNA_KOLEJNOSC)
DLUGOSC_SWAPOWANIA = len(OPTYMALNA_KOLEJNOSC)-1

i = 1
while i!=DLUGOSC_SWAPOWANIA:
    for j in range(1,DLUGOSC_KOLEJNOSCI-i):
        TESTOWANA_KOLEJNOSC = list(OPTYMALNA_KOLEJNOSC)
        ZmianaMiejscWspiczkowy(TESTOWANA_KOLEJNOSC,i,i+j)
        TESTOWANA_DROGA = DrogaWspinaczkowy(LISTA_ODLEGLOSCI_MIEDZY_MIASTAMI,TESTOWANA_KOLEJNOSC)
        if TESTOWANA_DROGA<OPTYMALNA_DROGA:
            OPTYMALNA_KOLEJNOSC = list(TESTOWANA_KOLEJNOSC)
            OPTYMALNA_DROGA = TESTOWANA_DROGA
            print(OPTYMALNA_KOLEJNOSC)
            print(OPTYMALNA_DROGA)
            i = 0
            j = 1
            break
    i = i+1





